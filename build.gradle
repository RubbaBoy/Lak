plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com.uddernetworks.lak'
version = '0.1.0-SNAPSHOT'
sourceCompatibility = '11'

task genLak(type: Jar){
    baseName = 'lak'
    with jar
}
jar.dependsOn genLak

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.urish.openal:java-openal:1.0.0'
    implementation 'org.hsqldb:hsqldb:2.5.0'


    implementation project(':pi-api')
    implementation project(':dummy-pi')
//    implementation project(':pi')

    testImplementation 'org.hsqldb:hsqldb:2.5.0'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

compileJava.inputs.files(processResources)

configurations {
    testArtifacts.extendsFrom testRuntime
}
task testJar(type: Jar) {
    classifier "test"
    from sourceSets.test.output
}
artifacts {
    testArtifacts testJar
}

test {
    useJUnitPlatform()
}
